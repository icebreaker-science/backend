plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'checkstyle'
    id "org.flywaydb.flyway" version "6.5.7"
}

group = 'science.icebreaker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    runtimeOnly 'com.h2database:h2'

    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile "org.flywaydb:flyway-core:6.5.7"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql'
    compile group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: '4.1.1'
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = 'icebreaker-science.jar'
}

checkstyle {
    toolVersion '8.36.1'
    configFile file("${project.rootDir}/checkstyle/checkstyle.xml")
    checkstyleTest.enabled = false
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}
