name: Tests and Docker


on:
  push:
    branches:
  schedule:
    - cron: '0 7 */2 * *'


env:
  IMAGE_NAME: icebreakerscience/backend


jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.14

      - name: Start Database
        run: |
          cd database
          docker-compose up -d

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run tests with Gradle
        run: ./gradlew clean test

  docker:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - uses: actions/checkout@v2

      - name: Set environment variable "BRANCH"
        run: |
          echo "BRANCH=$(eval 'echo $GITHUB_REF | sed s/refs\\/heads\\/// | sed s/\\//__/ ')" >> $GITHUB_ENV

      - name: Build image
        run: docker build -t new_image .

      - name: Login to dockerhub
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Add tags and push
        run: |
          docker tag new_image ${{ env.IMAGE_NAME }}:co-${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:co-${{ github.sha }}
          docker tag new_image ${{ env.IMAGE_NAME }}:br-${{ env.BRANCH }}
          docker push ${{ env.IMAGE_NAME }}:br-${{ env.BRANCH }}
          docker tag new_image ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Add "develop" tag and push
        if: env.BRANCH == 'develop'
        run: |
          docker tag new_image ${{ env.IMAGE_NAME }}:develop
          docker push ${{ env.IMAGE_NAME }}:develop

      - name: Add "production" tag and push
        if: env.BRANCH == 'production'
        run: |
          docker tag new_image ${{ env.IMAGE_NAME }}:production
          docker push ${{ env.IMAGE_NAME }}:production
